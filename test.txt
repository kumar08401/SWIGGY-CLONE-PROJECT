pipeline {
    agent any
    
    stages {
        stage('Fetch Code') {
            steps {
                git branch: 'main', changelog: false, credentialsId: 'github', poll: false, url: 'https://github.com/kumar08401/SWIGGY-CLONE-PROJECT.git'
            }
        }
        stage('Code Analysis') {
            environment {
                scannerHome = tool 'sonar'
            }
            steps {
                script {
                    withSonarQubeEnv('sonar') {
                        sh "${scannerHome}/bin/sonar-scanner \
                            -Dsonar.projectKey=swiggy \
                            -Dsonar.projectName=swiggy \
                            -Dsonar.sources=src"
                            
                    }
                }
            }
        }
        stage("SonarQube Quality Gate Check") {
            steps {
                /*script {
                def qualityGate = waitForQualityGate()
                    
                    if (qualityGate.status != 'OK') {
                        echo "${qualityGate.status}"
                        error "Quality Gate failed: ${qualityGateStatus}"
                    }
                    else {
                        echo "${qualityGate.status}"
                        echo "SonarQube Quality Gates Passed"
                    }
                }*/
                
                waitForQualityGate abortPipeline = true
            }
        }
    }
}
